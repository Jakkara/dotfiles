# GENERAL
alias nginxr='sudo nginx -s reload'
alias nginxt='sudo nginx -t'
alias suwww='sudo su -l www-data -s /bin/bash'
alias eval-ssh='eval $(ssh-agent -s) && ssh-add ~/.ssh/id_rsa'
alias lt="ls -ltrh"
alias phpdebug="XDEBUG_CONFIG=idekey=phpstorm"
alias dc="docker-compose"
alias dcud="docker-compose up -d"
alias dced="docker-compose exec django"
alias dcedb="docker-compose exec django bash"
alias dceds="docker-compose exec django python3 manage.py shell"
alias dcedrs="docker-compose exec django python3 manage.py runserver 0.0.0.0:8000"
alias _reload="source ~/.alias; source ~/.zshrc"
alias xo="xdg-open"
alias nt="npm test"
alias tf="terraform"
alias _history="history | sed 's/^[ ]*[0-9]\+[ ]*//'"
alias v="nvim"
alias nv="nvim"
alias vim="nvim"
alias e="exa -la"

# GIT
alias gitl="git log"
alias gits="git status"
alias gitcam="git commit -am"
alias gitf="git fetch"

# FUNCTIONS

dock-shell() {
    docker-compose exec django bash -c "$@"
}
dbdump() {
    today=$();
    sudo mysqldump "$1" > "$1"-`date +%Y-%m-%d`.sql
}
xon() {
    sudo phpenmod xdebug	
    sudo service php"$1"-fpm restart
}

xoff() {
    sudo phpdismod xdebug	
    sudo service php"$1"-fpm restart
}

countdown() {
  date1=$((`date +%s` + $1)); 
  while [ "$date1" -ge `date +%s` ]; do 
    echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
    sleep 0.1
  done
}

stopwatch() {
  date1=`date +%s`; 
  while true; do 
    echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r"; 
    sleep 0.1
  done
}

# usage:
# timer
# timer <time expression in seconds>
timer() {
    if [ $# -eq 0 ]
    then
        date1=`date +%s`;
        while true; do
            echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r";
            sleep 0.1
        done
    else
        date1=$((`date +%s` + $@)); 
        while [ "$date1" -ge `date +%s` ]; do 
            echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
            sleep 0.1
        done
        echo "Finished: $(date +%H:%M:%S)"
    fi
}

gitreb() {
  if [ -z "$(git status --untracked-files=no --porcelain)" ]; then 
    git rebase -i HEAD~$1
  else 
    git stash
    git rebase -i HEAD~$1
    git stash pop
  fi
}
gitreb-master() {
    git fetch origin master:master
    git stash
    git rebase origin/master
    git stash pop
}
gitreb-main() {
    git fetch origin main:main
    git stash
    git rebase origin/main
    git stash pop
}

gitfuzz() {
    git fetch
    local branches branch
    branches=$(git branch -a) &&
    branch=$(echo "$branches" | fzf +s +m -e) &&
    git checkout $(echo "$branch" | sed "s:.* remotes/origin/::" | sed "s:.* ::")
}

vimfuzz() {
    vim `bfuzz`
}

gnome-restart() {
    busctl --user call org.gnome.Shell /org/gnome/Shell org.gnome.Shell Eval s 'Meta.restart("Restarting...")'
} 

cdv() {
    local dst="$(command vifm --choose-dir - "$@")"
    if [ -z "$dst" ]; then
        echo 'Directory picking cancelled/failed'
        return 1
    fi
    cd "$dst"
}

git-reset() {
  current=$(git symbolic-ref --short -q HEAD)
  read -sk "?Reset current branch? [y/N]: "
  case $REPLY in
  [yY])
      echo
      git checkout -b "temp"
      git branch -D $current
      git checkout $current
      git branch -D temp
      ;;
  esac
}
bdiff() {
  git diff --name-only --diff-filter=d | xargs bat --diff
}
bfuzz() {
  fzf --preview 'bat --color=always --style=numbers --line-range=:500 {}'
}

qalias() {
  if [ $# -eq 0 ]
    then
      echo "No name supplied"
      exit 1
  fi
  command=$(fc -nl -1)
  name=$1 
  echo "alias $name='$command'" >> ~/dotfiles/.private
  source ~/dotfiles/.private
}

confirm() {
    whiptail --defaultno --yesno "Ihanko varma?" 12 80
}

source ~/dotfiles/.private
